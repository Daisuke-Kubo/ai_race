<?xml version="1.0"?>
<robot name="wheel_robot_base" xmlns:xacro="http://www.ros.org/wiki/xacro">
 
  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find robot_pkg)/urdf/materials.urdf.xacro" />
  <xacro:include filename="$(find robot_pkg)/urdf/wheel.urdf.xacro" />
  <xacro:include filename="$(find robot_pkg)/urdf/wheel_f.urdf.xacro" />
  <xacro:include filename="$(find robot_pkg)/urdf/hinge.urdf.xacro" />
  <xacro:include filename="$(find robot_pkg)/urdf/camera_macro.xacro" />
 
  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <property name="M_PI" value="3.1415926535897931" />
 
  <!-- Main Body-base -->
  <property name="base_x_size" value="1.0" /> 
  <property name="base_y_size" value="0.3" /> 
  <property name="base_z_size" value="0.25" />
  <property name="base_mass" value="35" /> <!-- in kg-->
 
  <!--Inertial macros for the box and cylinder. Units are kg*m^2-->
  <macro name="box_inertia" params="m x y z">
    <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
              iyy="${m*(x*x+z*z)/12}" iyz = "0"
              izz="${m*(x*x+z*z)/12}" /> 
  </macro>
 
  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0" 
          izz="0.0001" />
    </inertial>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>
 
  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
 
  <joint name="base_footprint_joint" type="fixed">
  <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>
 
  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_link">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
      <box_inertia  m="${base_mass}" x="${base_x_size}" y="${base_y_size}" z="${base_z_size}"/> 
    </inertial>    
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="1 0.3 0.25"/>
      </geometry>
      <material name="Yellow" />
    </visual>  
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
        <box size="1 0.3 0.25"/>
      </geometry>
    </collision>     
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
 
  <!-- camera -->
<camera_macro parent="base_link" prefix="front_camera" xyz="0.1 0.0 0.1"/>
 
 
  <!-- hinges -->
  <hinge lr="left" parent="base_link" translateX="1" translateY="1" flipY="-1"/>
  <hinge lr="right" parent="base_link" translateX="1" translateY="-1" flipY="-1"/>
 
  <!-- WHEELs -->
  <!--<wheel_f lr="right" parent="front_right_hinge" translateX="1" translateY="-1" flipY="-1"/>-->
  <!--<wheel_f lr="left" parent="front_left_hinge" translateX="1" translateY="1" flipY="-1"/>-->
  <wheel fb="front" lr="right" parent="base_link" translateX="1" translateY="-1" flipY="-1"/>
  <wheel fb="front" lr="left" parent="base_link" translateX="1" translateY="1" flipY="-1"/>
  <wheel fb="back" lr="right" parent="base_link" translateX="-1" translateY="-1" flipY="-1"/>
  <wheel fb="back" lr="left" parent="base_link" translateX="-1" translateY="1" flipY="-1"/>
  
  <gazebo>
   <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
     <!-- Plugin update rate in Hz -->
     <updateRate>100.0</updateRate>
     <!-- Name of left joint, defaults to `left_joint` -->
     <leftJoint>front_left_wheel_joint</leftJoint>
     <!-- Name of right joint, defaults to `right_joint` -->
     <rightJoint>front_right_wheel_joint</rightJoint>
     <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
     <wheelSeparation>0.5</wheelSeparation>
     <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
     <wheelDiameter>0.1</wheelDiameter>
     <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
     <wheelAcceleration>1.0</wheelAcceleration>
     <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
     <wheelTorque>20</wheelTorque>
     <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
     <commandTopic>cmd_vel</commandTopic>
     <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
     <odometryTopic>odom</odometryTopic>
     <!-- Odometry frame, defaults to `odom` -->
     <odometryFrame>odom</odometryFrame>
     <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
     <robotBaseFrame>base_link</robotBaseFrame>
     <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
     <odometrySource>1</odometrySource>
     <!-- Set to true to publish transforms for the wheel links, defaults to false -->
     <publishWheelTF>true</publishWheelTF>
     <!-- Set to true to publish transforms for the odometry, defaults to true -->
     <publishOdom>true</publishOdom>
     <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
     <publishWheelJointState>true</publishWheelJointState>
     <!-- Set to true to swap right and left wheels, defaults to true -->
     <legacyMode>false</legacyMode>
   </plugin>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so" />
  </gazebo>

 
</robot>