<?xml version="1.0"?>
<robot name="wheel_f" xmlns:xacro="http://www.ros.org/wiki/xacro">
 
  <!-- Wheels -->
  <property name="wheel_f_radius" value="0.032" /> 
  <property name="wheel_f_height" value="0.025" />
  <property name="wheel_f_mass" value="2.5" /> <!-- in kg-->
 
  <property name="base_x_origin_to_wheel_f_origin" value="0.0" />
  <property name="base_y_origin_to_wheel_f_origin" value="0.02"/><!--" />-->
  <property name="base_z_origin_to_wheel_f_origin" value="0.0" />
  
  <property name="fb" value="front" />
 
  <macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </macro>
 
  <xacro:macro name="wheel_f" params="lr parent translateX translateY flipY"> <!--fb : front, back ; lr: left, right -->
    <link name="front_${lr}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${flipY*M_PI/2} 0 0" /> 
        <geometry>
          <cylinder length="${wheel_f_height}" radius="${wheel_f_radius}" />
        </geometry>
        <material name="Black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${flipY*M_PI/2} 0 0" />
        <geometry>
          <cylinder length="${wheel_f_height}" radius="${wheel_f_radius}" />
        </geometry>
      </collision>
      <inertial>
        <mass value="${wheel_f_mass}" />
        <origin xyz="0 0 0" />
        <cylinder_inertia  m="${wheel_f_mass}" r="${wheel_f_radius}" h="${wheel_f_height}" />
      </inertial>
    </link>
 
    <gazebo reference="front_${lr}_wheel">
      <mu1 value="1.0"/>
      <mu2 value="1.0"/>
      <kp  value="10000000.0" />
      <kd  value="1.0" />
      <fdir1 value="1 0 0"/>
      <material>Gazebo/Black</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
 
    <joint name="front_${lr}_wheel_joint" type="continuous">
      <parent link="${parent}"/>
      <child link="front_${lr}_wheel"/>
      <origin xyz="${translateX * base_x_origin_to_wheel_f_origin} ${translateY * base_y_origin_to_wheel_f_origin} ${base_z_origin_to_wheel_f_origin}" rpy="0 0 0" /> 
      <axis xyz="0 1 0" rpy="0 0 0" />
      <limit effort="100" velocity="100"/>
      <joint_properties damping="0.1" friction="0.0"/>
    </joint>
 
    <!-- Transmission is important to link the joints and the controller -->
    <transmission name="front_${lr}_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="front_${lr}_wheel_joint">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="front_${lr}_wheel_joint_motor">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
 
  </xacro:macro>
</robot>